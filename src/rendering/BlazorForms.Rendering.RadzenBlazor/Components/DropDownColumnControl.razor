@using BlazorForms.Rendering.State
@using BlazorForms.Forms
@using BlazorForms.Shared

<MatSelect Disabled="@Field.DisplayProperties.Disabled" Value="@TextValue" TValue="string" ValueChanged="@(arg => ValueChanged(arg))" Style="width: 100%;">
    @foreach (var country in ViewModel.ModelNaviGetItems(ItemsBinding))
    {
        <MatOption Value=@ViewModel.PathNavi.GetValue(country, IdBinding).AsString()>@ViewModel.PathNavi.GetValue(country, NameBinding)</MatOption>
    }
</MatSelect>

@code {
    [CascadingParameter]
    public IFormViewModel ViewModel { get; set; }

    [Parameter]
    public int RowIndex { get; set; }

    [Parameter]
    public FieldControlDetails Field { get; set; }
    [Parameter]
    public string Caption { get; set; }
    [Parameter]
    public string Name { get; set; }
    [Parameter]
    public string ModelBinding { get; set; }
    [Parameter]
    public string ItemsBinding { get; set; }
    [Parameter]
    public string IdBinding { get; set; }
    [Parameter]
    public string NameBinding { get; set; }

    [Parameter]
    public EventCallback<ValueChangedArgs> ModelValueChanged { get; set; }

    [Parameter]
    public string TextValue { get; set; }

    private bool firstRun = true;

    protected override async Task OnInitializedAsync()
    {
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
    }


    void ValueChanged(string val)
    {
        TextValue = val;
        ModelValueChanged.InvokeAsync(new ValueChangedArgs { Binding = Field.Binding, NewValue = TextValue, RowIndex = RowIndex });
    }

}
